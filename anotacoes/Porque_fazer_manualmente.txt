Embora o laravel ofereça algumas opções de frameworks que automatizam a crianção de sistemas,
de autenticação, nem sempre o cliente vai querer esse fluxo no projeto dele. a aminha ideia aqui 
é criar cada etapa do sistema de auatenticação usando apenas recursos fornecidos pelo laravel sem 
usar Jetstream,breeze ou fortify, assim eu posso moldar sozinho o mue porprio fluxo de autenticação,
esse porjeto tera o seguinte fluxo 

1 - Usuario digita email e senha 
2 - Sistemna analisa os dados
3 - Sistema envia email de confirmação 
4 - se o cliente usar o link de confirmação ele consegue entrar 

----------------------------------------------------------------------------------
Funcionalidades iniciais 

1 - criação de Usuario 
2 - recuperação de senha 
3 - Perfil: eliminar perfil / editar senha 
4 - logout 

-----------------------------------------------------------------------
começando com o basico eu criei a base de dados, testei a comunicação depois 
crei uma migration para gerar a tabela para guardar os Usuarios do sistema 

----------------------------------------------------------------------------------------
public function up(): void
    {
        Schema::create('users', function (Blueprint $table) {
            $table->id();
            $table->string('user_name',30)->unique();
            $table->string('email', 50)->unique();
            $table->string('password',200);
            $table->string('token',100)->nullable();
            $table->dateTime('email_verified_at')->nullable()->default(null);
            $table->dateTime('last_login_at')->nullable()->default(null);
            $table->boolean('active')->nullable()->default(null);
            $table->dateTime('blocked_until')->nullable()->default(null);
            $table->timestamps();
            $table->softDeletes();
        });

-----------------------------------------------------------------------------------
o proximo passo agora é criar o model user para representar a tebela users que eu criei com essa migration 

php artisan make:model User 

o model user possui o metodo all() que serve poara trazer todos os usuarios e mostrar os dados,
mas como se tarat de um sistemade autenticação nem tudo pode ser mostrado, então para proteger 
alguns campos eu tem que definir a configuração hidden no model 


 protected $hidden = [
        'password',
        'remember_token',
 ];

trata-se de uma configuração parecida com o fillable, mas o fillable serve apara liberar a inserção de  
usuarios em massa, enquan o hidden serve para proteger campos da serialização. 

  protected $fillable = [
        'name',
        'email',
        'password',
    ];

-------------------------------------------------------------------------------
com o model configurado o porximo passo é confirara a seed para ue possa inserir ao menos um usuario
para testar o meu sistema.

Dentro da função run do seu seed eu fiz uma loop que cria 3 usuarios na abase de dados, a cada loop 
ele adiociona um usuario. 

 for($index = 1;$index <= 3; $index++){
         
         User::create([
             'username'=>"user$index",
             'email'=>"user$index@gmail.com",
             'password'=>bcrypt('Aa123456'),
             'email_verified_at'=>Carbon::now(),
             'active'=>true
            ]);

------------------------------------------------------------------------------
Rodando o seed pra gerar os usuarios 
- checar as importações 
- checar sempre se o nome dos camops esta compativel com a migration  

  php artisan db:seed --class UsersTableSeeder

--------------------------------------------------------------------------------


















